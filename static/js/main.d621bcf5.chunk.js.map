{"version":3,"sources":["components/Container/Container.module.css","components/Container/Container.js","redux/phonebook.js","redux/selectors.js","components/Form/SubmitButton/SubmitButton.js","components/Form/Form.js","redux/actions.js","components/Filter/Filter.js","components/Contacts/ContactsList/DeleteBtn/DeleteBtn.js","components/Contacts/ContactsList/ContactsList.js","components/Contacts/Contacts.js","App.js","redux/reducers.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","s","container","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getAllContacts","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","addContact","contact","body","useGetAllContactsQuery","useAddContactMutation","useDeleteContactMutation","getContacts","select","getFilter","state","filter","SubmitButton","loading","type","disabled","Form","useState","name","setName","number","setNumber","contacts","useSelector","data","isLoading","onInputChange","target","value","onSubmit","e","preventDefault","find","el","toast","error","position","theme","transition","Slide","onChange","pattern","title","required","changeFilter","createAction","Filter","filterValue","dispatch","useDispatch","actions","DeleteBtn","onClick","ContactsList","filteredContacts","normalizedFilter","toLowerCase","includes","getFilteredContacts","length","map","id","Contacts","isFetching","color","height","width","App","createReducer","_","payload","store","configureStore","reducer","middleware","getDefaultMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d621bcf5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__99QId\"};","import s from './Container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nconst URL = 'https://618eb91150e24d0017ce1407.mockapi.io';\r\n\r\nexport const contactsApi = createApi({\r\n  reducerPath: 'contacts',\r\n\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: URL,\r\n  }),\r\n  tagTypes: ['contacts'],\r\n  endpoints: builder => ({\r\n    getAllContacts: builder.query({\r\n      query: () => `/contacts`,\r\n      providesTags: ['contacts'],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n      query: contactId => ({\r\n        url: `/contacts/${contactId}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['contacts'],\r\n    }),\r\n    addContact: builder.mutation({\r\n      query: contact => ({\r\n        url: `/contacts`,\r\n        method: 'POST',\r\n        body: contact,\r\n      }),\r\n      invalidatesTags: ['contacts'],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetAllContactsQuery,\r\n  useAddContactMutation,\r\n  useDeleteContactMutation,\r\n} = contactsApi;\r\n","import { contactsApi } from './phonebook';\n\nexport const getContacts = contactsApi.endpoints.getAllContacts.select();\nexport const getFilter = state => state.filter;\n\nexport const getFilteredContacts = (state, contacts) => {\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(\n    contact =>\n      contact.name.toLowerCase().includes(normalizedFilter) ||\n      contact.number.includes(normalizedFilter),\n  );\n};\n","import './SubmitButton.css';\r\n\r\nexport default function SubmitButton({ loading }) {\r\n  return (\r\n    <button className=\"button\" type=\"submit\" disabled={loading}>\r\n      <div className=\"circle\">\r\n        <div className=\"cross top\"></div>\r\n        <div className=\"cross right\"></div>\r\n        <div className=\"cross center\"></div>\r\n        <div className=\"cross bottom\"></div>\r\n        <div className=\"cross left\"></div>\r\n      </div>\r\n      <span className=\"button__text\">Add contact</span>\r\n    </button>\r\n  );\r\n}\r\n","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Slide, toast } from 'react-toastify';\n\nimport './Form.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { getContacts } from 'redux/selectors';\nimport { useAddContactMutation } from 'redux/phonebook';\nimport SubmitButton from './SubmitButton';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const { data: contacts } = useSelector(getContacts);\n\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  const onInputChange = ({ target }) => {\n    const { name, value } = target;\n\n    name === 'name' ? setName(value) : setNumber(value);\n  };\n\n  function onFormSubmit(e) {\n    e.preventDefault();\n\n    const contact = {\n      name: e.target.name.value,\n      number: e.target.number.value,\n    };\n\n    if (contacts.find(el => el.name === contact.name)) {\n      toast.error(`${contact.name} is already in contacts`, {\n        position: 'top-left',\n        theme: 'colored',\n        transition: Slide,\n      });\n    } else {\n      addContact(contact);\n    }\n\n    reset();\n  }\n\n  function reset() {\n    setName('');\n    setNumber('');\n  }\n\n  return (\n    <form className=\"form\" onSubmit={onFormSubmit}>\n      <label className=\"form__label\">\n        <span className=\"form__label-text\">Name</span>\n        <input\n          className=\"form__input\"\n          onChange={onInputChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n        />\n        <label className=\"form__label\">\n          <span className=\"form__label-text\">Number</span>\n          <input\n            className=\"form__input\"\n            onChange={onInputChange}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={number}\n          />\n        </label>\n      </label>\n      <SubmitButton loading={isLoading} />\n    </form>\n  );\n}\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('phonebook/input_change');\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport './Filter.css';\nimport * as actions from 'redux/actions';\nimport { getFilter } from 'redux/selectors';\n\nexport default function Filter() {\n  const filterValue = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const setFilter = e => dispatch(actions.changeFilter(e.target.value));\n\n  return (\n    <div className=\"filter\">\n      <span className=\"filter__text\">Find contacts by name</span>\n      <input\n        className=\"filter__input\"\n        type=\"text\"\n        name=\"filter\"\n        onChange={setFilter}\n        value={filterValue}\n      />\n    </div>\n  );\n}\n","import './DeleteBtn.css';\r\n\r\nexport default function DeleteBtn({ deleteContact }) {\r\n  return (\r\n    <button className=\"delete-button\" type=\"button\" onClick={deleteContact}>\r\n      <div className=\"delete-logo\">\r\n        <div className=\"delete-button__one\"></div>\r\n        <div className=\"delete-button__two\"></div>\r\n      </div>\r\n    </button>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { useDeleteContactMutation } from 'redux/phonebook';\r\nimport { getFilteredContacts } from 'redux/selectors';\r\n\r\nimport './ContactsList.css';\r\nimport DeleteBtn from './DeleteBtn';\r\n\r\nexport default function ContactsList({ contacts }) {\r\n  const filteredContacts = useSelector(state =>\r\n    getFilteredContacts(state, contacts),\r\n  );\r\n\r\n  const [deleteContact] = useDeleteContactMutation();\r\n\r\n  return (\r\n    <ul className=\"contacts__list\">\r\n      {filteredContacts.length === 0 ? (\r\n        <p className=\"contacts__nothingText\">Nothing found</p>\r\n      ) : (\r\n        filteredContacts.map(contact => (\r\n          <li className=\"contacts__item\" key={contact.id}>\r\n            <span className=\"contacts__name\">{contact.name}</span>\r\n            <span className=\"dots\"></span>\r\n            <span className=\"contacts__number\">{contact.number}</span>\r\n            <DeleteBtn deleteContact={() => deleteContact(contact.id)} />\r\n          </li>\r\n        ))\r\n      )}\r\n    </ul>\r\n  );\r\n}\r\n","import Loader from 'react-loader-spinner';\n\nimport './Contacts.css';\n\nimport { useGetAllContactsQuery } from 'redux/phonebook';\nimport ContactsList from './ContactsList';\n\nexport default function Contacts() {\n  const { data: contacts = [], isFetching } = useGetAllContactsQuery();\n\n  return (\n    <>\n      {isFetching ? (\n        <div className=\"loader-container\">\n          <Loader type=\"ThreeDots\" color=\"#be26cc\" height={100} width={100} />\n        </div>\n      ) : (\n        <>\n          {contacts.length === 0 ? (\n            <p className=\"contacts__nothingText\">No contacts added</p>\n          ) : (\n            <ContactsList contacts={contacts} />\n          )}\n        </>\n      )}\n    </>\n  );\n}\n","import './App.css';\nimport Container from 'components/Container';\nimport Form from 'components/Form';\nimport Filter from 'components/Filter';\nimport Contacts from 'components/Contacts';\n\nimport { ToastContainer } from 'react-toastify';\n\nfunction App() {\n  return (\n    <>\n      <h1 className=\"app__title\">Phonebook</h1>\n      <Container>\n        <div className=\"form-container\">\n          <Form />\n        </div>\n        <div className=\"left-side-container\">\n          <div className=\"phonebook\">\n            <div className=\"phonebook__container\">\n              <Filter />\n              <h2 className=\"app__title\">Contacts</h2>\n              <Contacts />\n            </div>\n          </div>\n        </div>\n        <ToastContainer />\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { changeFilter } from './actions';\n\nexport const filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport { filter } from './reducers';\nimport { contactsApi } from './phonebook';\n\nexport const store = configureStore({\n  reducer: {\n    filter,\n    [contactsApi.reducerPath]: contactsApi.reducer,\n  },\n\n  middleware: getDefaultMiddleware => [\n    ...getDefaultMiddleware(),\n    contactsApi.middleware,\n  ],\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}